//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsFAC14DDD2C165AF75FC0EF9B38E0A0AB71F595870A79CB3CD4909E97C5320EF7))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsFAC14DDD2C165AF75FC0EF9B38E0A0AB71F595870A79CB3CD4909E97C5320EF7 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsFAC14DDD2C165AF75FC0EF9B38E0A0AB71F595870A79CB3CD4909E97C5320EF7()
        {
            this.EdmEntityContainerName = "ApplicationContext";
            this.StoreEntityContainerName = "GFDomainContextStoreContainer";
            this.HashOverMappingClosure = "ba7d1ba14dfd7fe56f10252ce7d5601aafb68d9c01fad66abd4af49348f495ab";
            this.HashOverAllExtentViews = "8e2d8e1576c5f9dec9cf805ad1574ea24ee3cdffda85eb95d737b041177a525f";
            this.ViewCount = 32;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.HighSchools
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.HighSchools", @"
    SELECT VALUE -- Constructing HighSchools
        [GF.Domain.Context.Store.HighSchools](T1.HighSchools_Id, T1.HighSchools_SchoolName, T1.HighSchools_RegionId)
    FROM (
        SELECT 
            T.Id AS HighSchools_Id, 
            T.SchoolName AS HighSchools_SchoolName, 
            T.RegionId AS HighSchools_RegionId, 
            True AS _from0
        FROM ApplicationContext.HighSchools AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.PayRecords
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.PayRecords", @"
    SELECT VALUE -- Constructing PayRecords
        [GF.Domain.Context.Store.PayRecords](T1.PayRecords_Id, T1.PayRecords_UserId, T1.PayRecords_Action, T1.PayRecords_Coins, T1.PayRecords_ActionTime)
    FROM (
        SELECT 
            T.Id AS PayRecords_Id, 
            T.UserId AS PayRecords_UserId, 
            T.Action AS PayRecords_Action, 
            T.Coins AS PayRecords_Coins, 
            T.ActionTime AS PayRecords_ActionTime, 
            True AS _from0
        FROM ApplicationContext.PayRecords AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.RechargeRecords
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.RechargeRecords", @"
    SELECT VALUE -- Constructing RechargeRecords
        [GF.Domain.Context.Store.RechargeRecords](T1.RechargeRecords_Id, T1.RechargeRecords_UserId, T1.RechargeRecords_Coins, T1.RechargeRecords_RechargeTime)
    FROM (
        SELECT 
            T.Id AS RechargeRecords_Id, 
            T.UserId AS RechargeRecords_UserId, 
            T.Coins AS RechargeRecords_Coins, 
            T.RechargeTime AS RechargeRecords_RechargeTime, 
            True AS _from0
        FROM ApplicationContext.RechargeRecords AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Regions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Regions", @"
    SELECT VALUE -- Constructing Regions
        [GF.Domain.Context.Store.Regions](T1.Regions_Id, T1.Regions_Gbcode, T1.Regions_Name, T1.Regions_Class)
    FROM (
        SELECT 
            T.Id AS Regions_Id, 
            T.Gbcode AS Regions_Gbcode, 
            T.Name AS Regions_Name, 
            T.Class AS Regions_Class, 
            True AS _from0
        FROM ApplicationContext.Regions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Roles", @"
    SELECT VALUE -- Constructing Roles
        [GF.Domain.Context.Store.Roles](T1.Roles_Id, T1.Roles_Name, T1.Roles_Description)
    FROM (
        SELECT 
            T.Id AS Roles_Id, 
            T.Name AS Roles_Name, 
            T.Description AS Roles_Description, 
            True AS _from0
        FROM ApplicationContext.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.ScorePublishes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.ScorePublishes", @"
    SELECT VALUE -- Constructing ScorePublishes
        [GF.Domain.Context.Store.ScorePublishes](T1.ScorePublishes_Id, T1.ScorePublishes_ProvinceId, T1.ScorePublishes_PublishDate)
    FROM (
        SELECT 
            T.Id AS ScorePublishes_Id, 
            T.ProvinceId AS ScorePublishes_ProvinceId, 
            T.PublishDate AS ScorePublishes_PublishDate, 
            True AS _from0
        FROM ApplicationContext.ScorePublishes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Specialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Specialities", @"
    SELECT VALUE -- Constructing Specialities
        [GF.Domain.Context.Store.Specialities](T1.Specialities_Id, T1.Specialities_Name, T1.Specialities_Category, T1.Specialities_SpecialityCode)
    FROM (
        SELECT 
            T.Id AS Specialities_Id, 
            T.Name AS Specialities_Name, 
            T.Category AS Specialities_Category, 
            T.SpecialityCode AS Specialities_SpecialityCode, 
            True AS _from0
        FROM ApplicationContext.Specialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Universities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Universities", @"
    SELECT VALUE -- Constructing Universities
        [GF.Domain.Context.Store.Universities](T1.Universities_Id, T1.Universities_Name, T1.Universities_UniversityType, T1.Universities_Subjection, T1.Universities_EducationLevel, T1.Universities_SchoolType, T1.Universities_Is985, T1.Universities_Is211, T1.Universities_IsNational, T1.Universities_UniversityCode, T1.Universities_ProvinceId)
    FROM (
        SELECT 
            T.Id AS Universities_Id, 
            T.Name AS Universities_Name, 
            T.UniversityType AS Universities_UniversityType, 
            T.Subjection AS Universities_Subjection, 
            T.EducationLevel AS Universities_EducationLevel, 
            T.SchoolType AS Universities_SchoolType, 
            T.Is985 AS Universities_Is985, 
            T.Is211 AS Universities_Is211, 
            T.IsNational AS Universities_IsNational, 
            T.UniversityCode AS Universities_UniversityCode, 
            T.ProvinceId AS Universities_ProvinceId, 
            True AS _from0
        FROM ApplicationContext.Universities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Users", @"
    SELECT VALUE -- Constructing Users
        [GF.Domain.Context.Store.Users](T1.Users_Id, T1.Users_UserName, T1.Users_Password, T1.Users_Email, T1.Users_QQ, T1.Users_Coins, T1.Users_IsLocked, T1.Users_IDCardNo, T1.Users_ChineseName, T1.Users_Gender, T1.Users_IsIDCardValid, T1.Users_LastActivityDate, T1.Users_RoleId, T1.Users_UniversityId)
    FROM (
        SELECT 
            T.Id AS Users_Id, 
            T.UserName AS Users_UserName, 
            T.Password AS Users_Password, 
            T.Email AS Users_Email, 
            T.QQ AS Users_QQ, 
            T.Coins AS Users_Coins, 
            T.IsLocked AS Users_IsLocked, 
            T.IDCardNo AS Users_IDCardNo, 
            T.ChineseName AS Users_ChineseName, 
            T.Gender AS Users_Gender, 
            T.IsIDCardValid AS Users_IsIDCardValid, 
            T.LastActivityDate AS Users_LastActivityDate, 
            T.RoleId AS Users_RoleId, 
            T.UniversityId AS Users_UniversityId, 
            True AS _from0
        FROM ApplicationContext.Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Achievements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Achievements", @"
    SELECT VALUE -- Constructing Achievements
        [GF.Domain.Context.Store.Achievements](T1.Achievements_Id, T1.Achievements_Score, T1.Achievements_ACEENumber, T1.Achievements_Year, T1.Achievements_ProvinceId, T1.Achievements_CourseType, T1.Achievements_UserId, T1.Achievements_HighSchoolId)
    FROM (
        SELECT 
            T.Id AS Achievements_Id, 
            T.Score AS Achievements_Score, 
            T.ACEENumber AS Achievements_ACEENumber, 
            T.Year AS Achievements_Year, 
            T.ProvinceId AS Achievements_ProvinceId, 
            T.CourseType AS Achievements_CourseType, 
            T.UserId AS Achievements_UserId, 
            T.HighSchoolId AS Achievements_HighSchoolId, 
            True AS _from0
        FROM ApplicationContext.Achievements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.Applications", @"
    SELECT VALUE -- Constructing Applications
        [GF.Domain.Context.Store.Applications](T1.Applications_Id, T1.Applications_Year, T1.Applications_Batch, T1.Applications_ApplicationSequence, T1.Applications_UserId, T1.Applications_SpecialityId, T1.Applications_IsAccepted, T1.Applications_ApplyTime, T1.Applications_UniversityId)
    FROM (
        SELECT 
            T.Id AS Applications_Id, 
            T.Year AS Applications_Year, 
            T.Batch AS Applications_Batch, 
            T.ApplicationSequence AS Applications_ApplicationSequence, 
            T.UserId AS Applications_UserId, 
            T.SpecialityId AS Applications_SpecialityId, 
            T.IsAccepted AS Applications_IsAccepted, 
            T.ApplyTime AS Applications_ApplyTime, 
            T.UniversityId AS Applications_UniversityId, 
            True AS _from0
        FROM ApplicationContext.Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.SpecialityAcceptanceStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.SpecialityAcceptanceStatistics", "\r\n    SELECT VALUE -- Constructing SpecialityAcceptanceStatistics\r\n        [GF.Do" +
                    "main.Context.Store.SpecialityAcceptanceStatistics](T1.SpecialityAcceptanceStatis" +
                    "tics_Id, T1.SpecialityAcceptanceStatistics_HighestScore, T1.SpecialityAcceptance" +
                    "Statistics_LowestScore, T1.SpecialityAcceptanceStatistics_AverageScore, T1.Speci" +
                    "alityAcceptanceStatistics_SpecialityId, T1.SpecialityAcceptanceStatistics_Planne" +
                    "dEnrollNumber, T1.SpecialityAcceptanceStatistics_RealEnrollNumber, T1.Speciality" +
                    "AcceptanceStatistics_Batch, T1.SpecialityAcceptanceStatistics_Year, T1.Specialit" +
                    "yAcceptanceStatistics_UniversityAcceptanceStatisticsId)\r\n    FROM (\r\n        SEL" +
                    "ECT \r\n            T.Id AS SpecialityAcceptanceStatistics_Id, \r\n            T.Hig" +
                    "hestScore AS SpecialityAcceptanceStatistics_HighestScore, \r\n            T.Lowest" +
                    "Score AS SpecialityAcceptanceStatistics_LowestScore, \r\n            T.AverageScor" +
                    "e AS SpecialityAcceptanceStatistics_AverageScore, \r\n            T.SpecialityId A" +
                    "S SpecialityAcceptanceStatistics_SpecialityId, \r\n            T.PlannedEnrollNumb" +
                    "er AS SpecialityAcceptanceStatistics_PlannedEnrollNumber, \r\n            T.RealEn" +
                    "rollNumber AS SpecialityAcceptanceStatistics_RealEnrollNumber, \r\n            T.B" +
                    "atch AS SpecialityAcceptanceStatistics_Batch, \r\n            T.Year AS Speciality" +
                    "AcceptanceStatistics_Year, \r\n            T.UniversityAcceptanceStatisticsId AS S" +
                    "pecialityAcceptanceStatistics_UniversityAcceptanceStatisticsId, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM ApplicationContext.SpecialityAcceptanceStatistics AS " +
                    "T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.UniversityAcceptanceStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.UniversityAcceptanceStatistics", @"
    SELECT VALUE -- Constructing UniversityAcceptanceStatistics
        [GF.Domain.Context.Store.UniversityAcceptanceStatistics](T1.UniversityAcceptanceStatistics_Id, T1.UniversityAcceptanceStatistics_Year, T1.UniversityAcceptanceStatistics_HighestScore, T1.UniversityAcceptanceStatistics_LowestScore, T1.UniversityAcceptanceStatistics_AverageScore, T1.UniversityAcceptanceStatistics_Batch, T1.UniversityAcceptanceStatistics_UniversityId, T1.UniversityAcceptanceStatistics_ProvinceId, T1.UniversityAcceptanceStatistics_AcceptNumber)
    FROM (
        SELECT 
            T.Id AS UniversityAcceptanceStatistics_Id, 
            T.Year AS UniversityAcceptanceStatistics_Year, 
            T.HighestScore AS UniversityAcceptanceStatistics_HighestScore, 
            T.LowestScore AS UniversityAcceptanceStatistics_LowestScore, 
            T.AverageScore AS UniversityAcceptanceStatistics_AverageScore, 
            T.Batch AS UniversityAcceptanceStatistics_Batch, 
            T.UniversityId AS UniversityAcceptanceStatistics_UniversityId, 
            T.ProvinceId AS UniversityAcceptanceStatistics_ProvinceId, 
            T.AcceptNumber AS UniversityAcceptanceStatistics_AcceptNumber, 
            True AS _from0
        FROM ApplicationContext.UniversityAcceptanceStatistics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.UniversityEnrollPlans
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.UniversityEnrollPlans", @"
    SELECT VALUE -- Constructing UniversityEnrollPlans
        [GF.Domain.Context.Store.UniversityEnrollPlans](T1.UniversityEnrollPlans_Id, T1.UniversityEnrollPlans_PlannedNumber, T1.UniversityEnrollPlans_Year, T1.UniversityEnrollPlans_ProvinceId, T1.UniversityEnrollPlans_Batch, T1.UniversityEnrollPlans_PlanCategory, T1.UniversityEnrollPlans_UniversityId, T1.UniversityEnrollPlans_SpecialityId, T1.UniversityEnrollPlans_CourseType, T1.UniversityEnrollPlans_StudyYears, T1.UniversityEnrollPlans_Remarks)
    FROM (
        SELECT 
            T.Id AS UniversityEnrollPlans_Id, 
            T.PlannedNumber AS UniversityEnrollPlans_PlannedNumber, 
            T.Year AS UniversityEnrollPlans_Year, 
            T.ProvinceId AS UniversityEnrollPlans_ProvinceId, 
            T.Batch AS UniversityEnrollPlans_Batch, 
            T.PlanCategory AS UniversityEnrollPlans_PlanCategory, 
            T.UniversityId AS UniversityEnrollPlans_UniversityId, 
            T.SpecialityId AS UniversityEnrollPlans_SpecialityId, 
            T.CourseType AS UniversityEnrollPlans_CourseType, 
            T.StudyYears AS UniversityEnrollPlans_StudyYears, 
            T.Remarks AS UniversityEnrollPlans_Remarks, 
            True AS _from0
        FROM ApplicationContext.UniversityEnrollPlans AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.IDCard
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.IDCard", @"
    SELECT VALUE -- Constructing IDCard
        [GF.Domain.Context.Store.IDCard](T1.IDCard_Id, T1.IDCard_UserId, T1.IDCard_ChineseName, T1.IDCard_IDCardNo)
    FROM (
        SELECT 
            T.Id AS IDCard_Id, 
            T.UserId AS IDCard_UserId, 
            T.ChineseName AS IDCard_ChineseName, 
            T.IDCardNo AS IDCard_IDCardNo, 
            True AS _from0
        FROM ApplicationContext.IDCards AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.HighSchools
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.HighSchools", @"
    SELECT VALUE -- Constructing HighSchools
        [GF.Domain.Context.HighSchool](T1.HighSchool_Id, T1.HighSchool_SchoolName, T1.HighSchool_RegionId)
    FROM (
        SELECT 
            T.Id AS HighSchool_Id, 
            T.SchoolName AS HighSchool_SchoolName, 
            T.RegionId AS HighSchool_RegionId, 
            True AS _from0
        FROM GFDomainContextStoreContainer.HighSchools AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.PayRecords
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.PayRecords", @"
    SELECT VALUE -- Constructing PayRecords
        [GF.Domain.Context.PayRecord](T1.PayRecord_Id, T1.PayRecord_UserId, T1.PayRecord_Action, T1.PayRecord_Coins, T1.PayRecord_ActionTime)
    FROM (
        SELECT 
            T.Id AS PayRecord_Id, 
            T.UserId AS PayRecord_UserId, 
            T.Action AS PayRecord_Action, 
            T.Coins AS PayRecord_Coins, 
            T.ActionTime AS PayRecord_ActionTime, 
            True AS _from0
        FROM GFDomainContextStoreContainer.PayRecords AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.RechargeRecords
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.RechargeRecords", @"
    SELECT VALUE -- Constructing RechargeRecords
        [GF.Domain.Context.RechargeRecord](T1.RechargeRecord_Id, T1.RechargeRecord_UserId, T1.RechargeRecord_Coins, T1.RechargeRecord_RechargeTime)
    FROM (
        SELECT 
            T.Id AS RechargeRecord_Id, 
            T.UserId AS RechargeRecord_UserId, 
            T.Coins AS RechargeRecord_Coins, 
            T.RechargeTime AS RechargeRecord_RechargeTime, 
            True AS _from0
        FROM GFDomainContextStoreContainer.RechargeRecords AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Regions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Regions", @"
    SELECT VALUE -- Constructing Regions
        [GF.Domain.Context.Region](T1.Region_Id, T1.Region_Gbcode, T1.Region_Name, T1.Region_Class)
    FROM (
        SELECT 
            T.Id AS Region_Id, 
            T.Gbcode AS Region_Gbcode, 
            T.Name AS Region_Name, 
            T.Class AS Region_Class, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Regions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Roles", @"
    SELECT VALUE -- Constructing Roles
        [GF.Domain.Context.Role](T1.Role_Id, T1.Role_Name, T1.Role_Description)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.Name AS Role_Name, 
            T.Description AS Role_Description, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.ScorePublishes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.ScorePublishes", @"
    SELECT VALUE -- Constructing ScorePublishes
        [GF.Domain.Context.ScorePublish](T1.ScorePublish_Id, T1.ScorePublish_ProvinceId, T1.ScorePublish_PublishDate)
    FROM (
        SELECT 
            T.Id AS ScorePublish_Id, 
            T.ProvinceId AS ScorePublish_ProvinceId, 
            T.PublishDate AS ScorePublish_PublishDate, 
            True AS _from0
        FROM GFDomainContextStoreContainer.ScorePublishes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Specialities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Specialities", @"
    SELECT VALUE -- Constructing Specialities
        [GF.Domain.Context.Speciality](T1.Speciality_Id, T1.Speciality_Name, T1.Speciality_Category, T1.Speciality_SpecialityCode)
    FROM (
        SELECT 
            T.Id AS Speciality_Id, 
            T.Name AS Speciality_Name, 
            T.Category AS Speciality_Category, 
            T.SpecialityCode AS Speciality_SpecialityCode, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Specialities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Universities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Universities", @"
    SELECT VALUE -- Constructing Universities
        [GF.Domain.Context.University](T1.University_Id, T1.University_Name, T1.University_UniversityType, T1.University_Subjection, T1.University_EducationLevel, T1.University_SchoolType, T1.University_Is985, T1.University_Is211, T1.University_IsNational, T1.University_UniversityCode, T1.University_ProvinceId)
    FROM (
        SELECT 
            T.Id AS University_Id, 
            T.Name AS University_Name, 
            T.UniversityType AS University_UniversityType, 
            T.Subjection AS University_Subjection, 
            T.EducationLevel AS University_EducationLevel, 
            T.SchoolType AS University_SchoolType, 
            T.Is985 AS University_Is985, 
            T.Is211 AS University_Is211, 
            T.IsNational AS University_IsNational, 
            T.UniversityCode AS University_UniversityCode, 
            T.ProvinceId AS University_ProvinceId, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Universities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Users", @"
    SELECT VALUE -- Constructing Users
        [GF.Domain.Context.User](T1.User_Id, T1.User_UserName, T1.User_Password, T1.User_Email, T1.User_QQ, T1.User_Coins, T1.User_IsLocked, T1.User_IDCardNo, T1.User_ChineseName, T1.User_Gender, T1.User_IsIDCardValid, T1.User_LastActivityDate, T1.User_RoleId, T1.User_UniversityId)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.UserName AS User_UserName, 
            T.Password AS User_Password, 
            T.Email AS User_Email, 
            T.QQ AS User_QQ, 
            T.Coins AS User_Coins, 
            T.IsLocked AS User_IsLocked, 
            T.IDCardNo AS User_IDCardNo, 
            T.ChineseName AS User_ChineseName, 
            T.Gender AS User_Gender, 
            T.IsIDCardValid AS User_IsIDCardValid, 
            T.LastActivityDate AS User_LastActivityDate, 
            T.RoleId AS User_RoleId, 
            T.UniversityId AS User_UniversityId, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Users AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Achievements
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Achievements", @"
    SELECT VALUE -- Constructing Achievements
        [GF.Domain.Context.Achievement](T1.Achievement_Id, T1.Achievement_Score, T1.Achievement_ACEENumber, T1.Achievement_Year, T1.Achievement_CourseType, T1.Achievement_UserId, T1.Achievement_HighSchoolId, T1.Achievement_ProvinceId)
    FROM (
        SELECT 
            T.Id AS Achievement_Id, 
            T.Score AS Achievement_Score, 
            T.ACEENumber AS Achievement_ACEENumber, 
            T.Year AS Achievement_Year, 
            T.CourseType AS Achievement_CourseType, 
            T.UserId AS Achievement_UserId, 
            T.HighSchoolId AS Achievement_HighSchoolId, 
            T.ProvinceId AS Achievement_ProvinceId, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Achievements AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.Applications", @"
    SELECT VALUE -- Constructing Applications
        [GF.Domain.Context.Application](T1.Application_Id, T1.Application_Year, T1.Application_Batch, T1.Application_ApplicationSequence, T1.Application_UserId, T1.Application_SpecialityId, T1.Application_IsAccepted, T1.Application_ApplyTime, T1.Application_UniversityId)
    FROM (
        SELECT 
            T.Id AS Application_Id, 
            T.Year AS Application_Year, 
            T.Batch AS Application_Batch, 
            T.ApplicationSequence AS Application_ApplicationSequence, 
            T.UserId AS Application_UserId, 
            T.SpecialityId AS Application_SpecialityId, 
            T.IsAccepted AS Application_IsAccepted, 
            T.ApplyTime AS Application_ApplyTime, 
            T.UniversityId AS Application_UniversityId, 
            True AS _from0
        FROM GFDomainContextStoreContainer.Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.SpecialityAcceptanceStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.SpecialityAcceptanceStatistics", "\r\n    SELECT VALUE -- Constructing SpecialityAcceptanceStatistics\r\n        [GF.Do" +
                    "main.Context.SpecialityAcceptanceStatistic](T1.SpecialityAcceptanceStatistic_Id," +
                    " T1.SpecialityAcceptanceStatistic_HighestScore, T1.SpecialityAcceptanceStatistic" +
                    "_LowestScore, T1.SpecialityAcceptanceStatistic_AverageScore, T1.SpecialityAccept" +
                    "anceStatistic_SpecialityId, T1.SpecialityAcceptanceStatistic_PlannedEnrollNumber" +
                    ", T1.SpecialityAcceptanceStatistic_RealEnrollNumber, T1.SpecialityAcceptanceStat" +
                    "istic_Batch, T1.SpecialityAcceptanceStatistic_Year, T1.SpecialityAcceptanceStati" +
                    "stic_UniversityAcceptanceStatisticsId)\r\n    FROM (\r\n        SELECT \r\n           " +
                    " T.Id AS SpecialityAcceptanceStatistic_Id, \r\n            T.HighestScore AS Speci" +
                    "alityAcceptanceStatistic_HighestScore, \r\n            T.LowestScore AS Speciality" +
                    "AcceptanceStatistic_LowestScore, \r\n            T.AverageScore AS SpecialityAccep" +
                    "tanceStatistic_AverageScore, \r\n            T.SpecialityId AS SpecialityAcceptanc" +
                    "eStatistic_SpecialityId, \r\n            T.PlannedEnrollNumber AS SpecialityAccept" +
                    "anceStatistic_PlannedEnrollNumber, \r\n            T.RealEnrollNumber AS Specialit" +
                    "yAcceptanceStatistic_RealEnrollNumber, \r\n            T.Batch AS SpecialityAccept" +
                    "anceStatistic_Batch, \r\n            T.Year AS SpecialityAcceptanceStatistic_Year," +
                    " \r\n            T.UniversityAcceptanceStatisticsId AS SpecialityAcceptanceStatist" +
                    "ic_UniversityAcceptanceStatisticsId, \r\n            True AS _from0\r\n        FROM " +
                    "GFDomainContextStoreContainer.SpecialityAcceptanceStatistics AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.UniversityAcceptanceStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.UniversityAcceptanceStatistics", @"
    SELECT VALUE -- Constructing UniversityAcceptanceStatistics
        [GF.Domain.Context.UniversityAcceptanceStatistic](T1.UniversityAcceptanceStatistic_Id, T1.UniversityAcceptanceStatistic_Year, T1.UniversityAcceptanceStatistic_HighestScore, T1.UniversityAcceptanceStatistic_LowestScore, T1.UniversityAcceptanceStatistic_AverageScore, T1.UniversityAcceptanceStatistic_Batch, T1.UniversityAcceptanceStatistic_UniversityId, T1.UniversityAcceptanceStatistic_ProvinceId, T1.UniversityAcceptanceStatistic_AcceptNumber)
    FROM (
        SELECT 
            T.Id AS UniversityAcceptanceStatistic_Id, 
            T.Year AS UniversityAcceptanceStatistic_Year, 
            T.HighestScore AS UniversityAcceptanceStatistic_HighestScore, 
            T.LowestScore AS UniversityAcceptanceStatistic_LowestScore, 
            T.AverageScore AS UniversityAcceptanceStatistic_AverageScore, 
            T.Batch AS UniversityAcceptanceStatistic_Batch, 
            T.UniversityId AS UniversityAcceptanceStatistic_UniversityId, 
            T.ProvinceId AS UniversityAcceptanceStatistic_ProvinceId, 
            T.AcceptNumber AS UniversityAcceptanceStatistic_AcceptNumber, 
            True AS _from0
        FROM GFDomainContextStoreContainer.UniversityAcceptanceStatistics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.UniversityEnrollPlans
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.UniversityEnrollPlans", @"
    SELECT VALUE -- Constructing UniversityEnrollPlans
        [GF.Domain.Context.UniversityEnrollPlan](T1.UniversityEnrollPlan_Id, T1.UniversityEnrollPlan_PlannedNumber, T1.UniversityEnrollPlan_Year, T1.UniversityEnrollPlan_ProvinceId, T1.UniversityEnrollPlan_Batch, T1.UniversityEnrollPlan_PlanCategory, T1.UniversityEnrollPlan_UniversityId, T1.UniversityEnrollPlan_SpecialityId, T1.UniversityEnrollPlan_CourseType, T1.UniversityEnrollPlan_StudyYears, T1.UniversityEnrollPlan_Remarks)
    FROM (
        SELECT 
            T.Id AS UniversityEnrollPlan_Id, 
            T.PlannedNumber AS UniversityEnrollPlan_PlannedNumber, 
            T.Year AS UniversityEnrollPlan_Year, 
            T.ProvinceId AS UniversityEnrollPlan_ProvinceId, 
            T.Batch AS UniversityEnrollPlan_Batch, 
            T.PlanCategory AS UniversityEnrollPlan_PlanCategory, 
            T.UniversityId AS UniversityEnrollPlan_UniversityId, 
            T.SpecialityId AS UniversityEnrollPlan_SpecialityId, 
            T.CourseType AS UniversityEnrollPlan_CourseType, 
            T.StudyYears AS UniversityEnrollPlan_StudyYears, 
            T.Remarks AS UniversityEnrollPlan_Remarks, 
            True AS _from0
        FROM GFDomainContextStoreContainer.UniversityEnrollPlans AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.IDCards
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.IDCards", @"
    SELECT VALUE -- Constructing IDCards
        [GF.Domain.Context.IDCard](T1.IDCard_Id, T1.IDCard_UserId, T1.IDCard_ChineseName, T1.IDCard_IDCardNo)
    FROM (
        SELECT 
            T.Id AS IDCard_Id, 
            T.UserId AS IDCard_UserId, 
            T.ChineseName AS IDCard_ChineseName, 
            T.IDCardNo AS IDCard_IDCardNo, 
            True AS _from0
        FROM GFDomainContextStoreContainer.IDCard AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GFDomainContextStoreContainer.ApplicationStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GFDomainContextStoreContainer.ApplicationStatistics", @"
    SELECT VALUE -- Constructing ApplicationStatistics
        [GF.Domain.Context.Store.ApplicationStatistics](T1.ApplicationStatistics_Id, T1.ApplicationStatistics_TotalQuantity, T1.ApplicationStatistics_SuccessQuantity, T1.ApplicationStatistics_FailQuantity, T1.ApplicationStatistics_ApplicationSequence, T1.ApplicationStatistics_Year)
    FROM (
        SELECT 
            T.Id AS ApplicationStatistics_Id, 
            T.TotalQuantity AS ApplicationStatistics_TotalQuantity, 
            T.SuccessQuantity AS ApplicationStatistics_SuccessQuantity, 
            T.FailQuantity AS ApplicationStatistics_FailQuantity, 
            T.ApplicationSequence AS ApplicationStatistics_ApplicationSequence, 
            T.Year AS ApplicationStatistics_Year, 
            True AS _from0
        FROM ApplicationContext.ApplicationStatistics AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ApplicationContext.ApplicationStatistics
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ApplicationContext.ApplicationStatistics", @"
    SELECT VALUE -- Constructing ApplicationStatistics
        [GF.Domain.Context.ApplicationStatistic](T1.ApplicationStatistic_Id, T1.ApplicationStatistic_TotalQuantity, T1.ApplicationStatistic_SuccessQuantity, T1.ApplicationStatistic_FailQuantity, T1.ApplicationStatistic_ApplicationSequence, T1.ApplicationStatistic_Year)
    FROM (
        SELECT 
            T.Id AS ApplicationStatistic_Id, 
            T.TotalQuantity AS ApplicationStatistic_TotalQuantity, 
            T.SuccessQuantity AS ApplicationStatistic_SuccessQuantity, 
            T.FailQuantity AS ApplicationStatistic_FailQuantity, 
            T.ApplicationSequence AS ApplicationStatistic_ApplicationSequence, 
            T.Year AS ApplicationStatistic_Year, 
            True AS _from0
        FROM GFDomainContextStoreContainer.ApplicationStatistics AS T
    ) AS T1");
        }
    }
}
