//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GloriousFuture", "SpecialityEnrollStatisticUniversityEnrollStatistic", "SpecialityEnrollStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.SpecialityAcceptanceStatistic), "UniversityEnrollStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.UniversityAcceptanceStatistic), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "UniversityEnrollStatisticUniversity", "UniversityEnrollStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.UniversityAcceptanceStatistic), "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.University), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "SpecialityAcceptanceStatisticSpeciality", "SpecialityAcceptanceStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.SpecialityAcceptanceStatistic), "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.Speciality), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "ApplicationUser", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.Application), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.User), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "EnrollPlanUniversity", "EnrollPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.EnrollPlan), "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.University), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "EnrollPlanSpeciality", "EnrollPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.EnrollPlan), "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.Speciality), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "ApplicationUniversity", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.Application), "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.University), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "ApplicationSpeciality", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GF.DomainEntity.Application), "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.Speciality), true)]
[assembly: EdmRelationshipAttribute("GloriousFuture", "FK_AchievementUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GF.DomainEntity.User), "Achievement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GF.DomainEntity.Achievement), true)]

#endregion

namespace GF.DomainEntity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GloriousFutureContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GloriousFutureContainer object using the connection string found in the 'GloriousFutureContainer' section of the application configuration file.
        /// </summary>
        public GloriousFutureContainer() : base("name=GloriousFutureContainer", "GloriousFutureContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GloriousFutureContainer object.
        /// </summary>
        public GloriousFutureContainer(string connectionString) : base(connectionString, "GloriousFutureContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GloriousFutureContainer object.
        /// </summary>
        public GloriousFutureContainer(EntityConnection connection) : base(connection, "GloriousFutureContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<University> Universities
        {
            get
            {
                if ((_Universities == null))
                {
                    _Universities = base.CreateObjectSet<University>("Universities");
                }
                return _Universities;
            }
        }
        private ObjectSet<University> _Universities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnrollPlan> EnrollPlans
        {
            get
            {
                if ((_EnrollPlans == null))
                {
                    _EnrollPlans = base.CreateObjectSet<EnrollPlan>("EnrollPlans");
                }
                return _EnrollPlans;
            }
        }
        private ObjectSet<EnrollPlan> _EnrollPlans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UniversityAcceptanceStatistic> UniversityAcceptanceStatistics
        {
            get
            {
                if ((_UniversityAcceptanceStatistics == null))
                {
                    _UniversityAcceptanceStatistics = base.CreateObjectSet<UniversityAcceptanceStatistic>("UniversityAcceptanceStatistics");
                }
                return _UniversityAcceptanceStatistics;
            }
        }
        private ObjectSet<UniversityAcceptanceStatistic> _UniversityAcceptanceStatistics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecialityAcceptanceStatistic> SpecialityAcceptanceStatistics
        {
            get
            {
                if ((_SpecialityAcceptanceStatistics == null))
                {
                    _SpecialityAcceptanceStatistics = base.CreateObjectSet<SpecialityAcceptanceStatistic>("SpecialityAcceptanceStatistics");
                }
                return _SpecialityAcceptanceStatistics;
            }
        }
        private ObjectSet<SpecialityAcceptanceStatistic> _SpecialityAcceptanceStatistics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speciality> Specialities
        {
            get
            {
                if ((_Specialities == null))
                {
                    _Specialities = base.CreateObjectSet<Speciality>("Specialities");
                }
                return _Specialities;
            }
        }
        private ObjectSet<Speciality> _Specialities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Achievement> Achievements
        {
            get
            {
                if ((_Achievements == null))
                {
                    _Achievements = base.CreateObjectSet<Achievement>("Achievements");
                }
                return _Achievements;
            }
        }
        private ObjectSet<Achievement> _Achievements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationStatistic_DTO> ApplicationStatistic_DTO
        {
            get
            {
                if ((_ApplicationStatistic_DTO == null))
                {
                    _ApplicationStatistic_DTO = base.CreateObjectSet<ApplicationStatistic_DTO>("ApplicationStatistic_DTO");
                }
                return _ApplicationStatistic_DTO;
            }
        }
        private ObjectSet<ApplicationStatistic_DTO> _ApplicationStatistic_DTO;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Universities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversities(University university)
        {
            base.AddObject("Universities", university);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnrollPlans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnrollPlans(EnrollPlan enrollPlan)
        {
            base.AddObject("EnrollPlans", enrollPlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UniversityAcceptanceStatistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversityAcceptanceStatistics(UniversityAcceptanceStatistic universityAcceptanceStatistic)
        {
            base.AddObject("UniversityAcceptanceStatistics", universityAcceptanceStatistic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialityAcceptanceStatistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialityAcceptanceStatistics(SpecialityAcceptanceStatistic specialityAcceptanceStatistic)
        {
            base.AddObject("SpecialityAcceptanceStatistics", specialityAcceptanceStatistic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specialities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialities(Speciality speciality)
        {
            base.AddObject("Specialities", speciality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Achievements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievements(Achievement achievement)
        {
            base.AddObject("Achievements", achievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationStatistic_DTO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationStatistic_DTO(ApplicationStatistic_DTO applicationStatistic_DTO)
        {
            base.AddObject("ApplicationStatistic_DTO", applicationStatistic_DTO);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="Achievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Achievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Achievement object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static Achievement CreateAchievement(global::System.Guid userId, global::System.Double score)
        {
            Achievement achievement = new Achievement();
            achievement.UserId = userId;
            achievement.Score = score;
            return achievement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Double _Score;
        partial void OnScoreChanging(global::System.Double value);
        partial void OnScoreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "FK_AchievementUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.FK_AchievementUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.FK_AchievementUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.FK_AchievementUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GloriousFuture.FK_AchievementUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="batch">Initial value of the Batch property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        public static Application CreateApplication(global::System.Guid id, global::System.DateTime year, global::System.String batch, global::System.Int32 sequence, global::System.Guid userId, global::System.Guid universityId, global::System.Guid specialityId)
        {
            Application application = new Application();
            application.Id = id;
            application.Year = year;
            application.Batch = batch;
            application.Sequence = sequence;
            application.UserId = userId;
            application.UniversityId = universityId;
            application.SpecialityId = specialityId;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.DateTime _Year;
        partial void OnYearChanging(global::System.DateTime value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Batch
        {
            get
            {
                return _Batch;
            }
            set
            {
                OnBatchChanging(value);
                ReportPropertyChanging("Batch");
                _Batch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Batch");
                OnBatchChanged();
            }
        }
        private global::System.String _Batch;
        partial void OnBatchChanging(global::System.String value);
        partial void OnBatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.Guid _UniversityId;
        partial void OnUniversityIdChanging(global::System.Guid value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "ApplicationUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.ApplicationUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.ApplicationUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GloriousFuture.ApplicationUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GloriousFuture.ApplicationUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "ApplicationUniversity", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.ApplicationUniversity", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.ApplicationUniversity", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.ApplicationUniversity", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("GloriousFuture.ApplicationUniversity", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "ApplicationSpeciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.ApplicationSpeciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.ApplicationSpeciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.ApplicationSpeciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("GloriousFuture.ApplicationSpeciality", "Speciality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="ApplicationStatistic_DTO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationStatistic_DTO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationStatistic_DTO object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="highestScore">Initial value of the HighestScore property.</param>
        /// <param name="lowestScore">Initial value of the LowestScore property.</param>
        /// <param name="averageScore">Initial value of the AverageScore property.</param>
        /// <param name="totality">Initial value of the Totality property.</param>
        /// <param name="scoreRank">Initial value of the ScoreRank property.</param>
        public static ApplicationStatistic_DTO CreateApplicationStatistic_DTO(global::System.Guid id, global::System.Double highestScore, global::System.Double lowestScore, global::System.Double averageScore, global::System.Int32 totality, global::System.Int32 scoreRank)
        {
            ApplicationStatistic_DTO applicationStatistic_DTO = new ApplicationStatistic_DTO();
            applicationStatistic_DTO.Id = id;
            applicationStatistic_DTO.HighestScore = highestScore;
            applicationStatistic_DTO.LowestScore = lowestScore;
            applicationStatistic_DTO.AverageScore = averageScore;
            applicationStatistic_DTO.Totality = totality;
            applicationStatistic_DTO.ScoreRank = scoreRank;
            return applicationStatistic_DTO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HighestScore
        {
            get
            {
                return _HighestScore;
            }
            set
            {
                OnHighestScoreChanging(value);
                ReportPropertyChanging("HighestScore");
                _HighestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestScore");
                OnHighestScoreChanged();
            }
        }
        private global::System.Double _HighestScore;
        partial void OnHighestScoreChanging(global::System.Double value);
        partial void OnHighestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LowestScore
        {
            get
            {
                return _LowestScore;
            }
            set
            {
                OnLowestScoreChanging(value);
                ReportPropertyChanging("LowestScore");
                _LowestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestScore");
                OnLowestScoreChanged();
            }
        }
        private global::System.Double _LowestScore;
        partial void OnLowestScoreChanging(global::System.Double value);
        partial void OnLowestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AverageScore
        {
            get
            {
                return _AverageScore;
            }
            set
            {
                OnAverageScoreChanging(value);
                ReportPropertyChanging("AverageScore");
                _AverageScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageScore");
                OnAverageScoreChanged();
            }
        }
        private global::System.Double _AverageScore;
        partial void OnAverageScoreChanging(global::System.Double value);
        partial void OnAverageScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Totality
        {
            get
            {
                return _Totality;
            }
            set
            {
                OnTotalityChanging(value);
                ReportPropertyChanging("Totality");
                _Totality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Totality");
                OnTotalityChanged();
            }
        }
        private global::System.Int32 _Totality;
        partial void OnTotalityChanging(global::System.Int32 value);
        partial void OnTotalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreRank
        {
            get
            {
                return _ScoreRank;
            }
            set
            {
                OnScoreRankChanging(value);
                ReportPropertyChanging("ScoreRank");
                _ScoreRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreRank");
                OnScoreRankChanged();
            }
        }
        private global::System.Int32 _ScoreRank;
        partial void OnScoreRankChanging(global::System.Int32 value);
        partial void OnScoreRankChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="EnrollPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnrollPlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnrollPlan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="plannedEnrollNumber">Initial value of the PlannedEnrollNumber property.</param>
        /// <param name="universitySpecialityId">Initial value of the UniversitySpecialityId property.</param>
        /// <param name="batch">Initial value of the Batch property.</param>
        /// <param name="isDirectional">Initial value of the IsDirectional property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        public static EnrollPlan CreateEnrollPlan(global::System.Guid id, global::System.DateTime year, global::System.String province, global::System.Int32 plannedEnrollNumber, global::System.Guid universitySpecialityId, global::System.String batch, global::System.Boolean isDirectional, global::System.Guid universityId, global::System.Guid specialityId)
        {
            EnrollPlan enrollPlan = new EnrollPlan();
            enrollPlan.Id = id;
            enrollPlan.Year = year;
            enrollPlan.Province = province;
            enrollPlan.PlannedEnrollNumber = plannedEnrollNumber;
            enrollPlan.UniversitySpecialityId = universitySpecialityId;
            enrollPlan.Batch = batch;
            enrollPlan.IsDirectional = isDirectional;
            enrollPlan.UniversityId = universityId;
            enrollPlan.SpecialityId = specialityId;
            return enrollPlan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.DateTime _Year;
        partial void OnYearChanging(global::System.DateTime value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlannedEnrollNumber
        {
            get
            {
                return _PlannedEnrollNumber;
            }
            set
            {
                OnPlannedEnrollNumberChanging(value);
                ReportPropertyChanging("PlannedEnrollNumber");
                _PlannedEnrollNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlannedEnrollNumber");
                OnPlannedEnrollNumberChanged();
            }
        }
        private global::System.Int32 _PlannedEnrollNumber;
        partial void OnPlannedEnrollNumberChanging(global::System.Int32 value);
        partial void OnPlannedEnrollNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniversitySpecialityId
        {
            get
            {
                return _UniversitySpecialityId;
            }
            set
            {
                OnUniversitySpecialityIdChanging(value);
                ReportPropertyChanging("UniversitySpecialityId");
                _UniversitySpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversitySpecialityId");
                OnUniversitySpecialityIdChanged();
            }
        }
        private global::System.Guid _UniversitySpecialityId;
        partial void OnUniversitySpecialityIdChanging(global::System.Guid value);
        partial void OnUniversitySpecialityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Batch
        {
            get
            {
                return _Batch;
            }
            set
            {
                OnBatchChanging(value);
                ReportPropertyChanging("Batch");
                _Batch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Batch");
                OnBatchChanged();
            }
        }
        private global::System.String _Batch;
        partial void OnBatchChanging(global::System.String value);
        partial void OnBatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDirectional
        {
            get
            {
                return _IsDirectional;
            }
            set
            {
                OnIsDirectionalChanging(value);
                ReportPropertyChanging("IsDirectional");
                _IsDirectional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDirectional");
                OnIsDirectionalChanged();
            }
        }
        private global::System.Boolean _IsDirectional;
        partial void OnIsDirectionalChanging(global::System.Boolean value);
        partial void OnIsDirectionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.Guid _UniversityId;
        partial void OnUniversityIdChanging(global::System.Guid value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "EnrollPlanUniversity", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.EnrollPlanUniversity", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.EnrollPlanUniversity", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.EnrollPlanUniversity", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("GloriousFuture.EnrollPlanUniversity", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "EnrollPlanSpeciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.EnrollPlanSpeciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.EnrollPlanSpeciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.EnrollPlanSpeciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("GloriousFuture.EnrollPlanSpeciality", "Speciality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="Speciality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speciality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speciality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Speciality CreateSpeciality(global::System.Guid id)
        {
            Speciality speciality = new Speciality();
            speciality.Id = id;
            return speciality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="SpecialityAcceptanceStatistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialityAcceptanceStatistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecialityAcceptanceStatistic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="universityEnrollStatisticId">Initial value of the UniversityEnrollStatisticId property.</param>
        /// <param name="highestScore">Initial value of the HighestScore property.</param>
        /// <param name="lowestScore">Initial value of the LowestScore property.</param>
        /// <param name="averageScore">Initial value of the AverageScore property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        public static SpecialityAcceptanceStatistic CreateSpecialityAcceptanceStatistic(global::System.Guid id, global::System.Guid universityEnrollStatisticId, global::System.Double highestScore, global::System.Double lowestScore, global::System.Double averageScore, global::System.String province, global::System.Guid specialityId)
        {
            SpecialityAcceptanceStatistic specialityAcceptanceStatistic = new SpecialityAcceptanceStatistic();
            specialityAcceptanceStatistic.Id = id;
            specialityAcceptanceStatistic.UniversityEnrollStatisticId = universityEnrollStatisticId;
            specialityAcceptanceStatistic.HighestScore = highestScore;
            specialityAcceptanceStatistic.LowestScore = lowestScore;
            specialityAcceptanceStatistic.AverageScore = averageScore;
            specialityAcceptanceStatistic.Province = province;
            specialityAcceptanceStatistic.SpecialityId = specialityId;
            return specialityAcceptanceStatistic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniversityEnrollStatisticId
        {
            get
            {
                return _UniversityEnrollStatisticId;
            }
            set
            {
                OnUniversityEnrollStatisticIdChanging(value);
                ReportPropertyChanging("UniversityEnrollStatisticId");
                _UniversityEnrollStatisticId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityEnrollStatisticId");
                OnUniversityEnrollStatisticIdChanged();
            }
        }
        private global::System.Guid _UniversityEnrollStatisticId;
        partial void OnUniversityEnrollStatisticIdChanging(global::System.Guid value);
        partial void OnUniversityEnrollStatisticIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HighestScore
        {
            get
            {
                return _HighestScore;
            }
            set
            {
                OnHighestScoreChanging(value);
                ReportPropertyChanging("HighestScore");
                _HighestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestScore");
                OnHighestScoreChanged();
            }
        }
        private global::System.Double _HighestScore;
        partial void OnHighestScoreChanging(global::System.Double value);
        partial void OnHighestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LowestScore
        {
            get
            {
                return _LowestScore;
            }
            set
            {
                OnLowestScoreChanging(value);
                ReportPropertyChanging("LowestScore");
                _LowestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestScore");
                OnLowestScoreChanged();
            }
        }
        private global::System.Double _LowestScore;
        partial void OnLowestScoreChanging(global::System.Double value);
        partial void OnLowestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AverageScore
        {
            get
            {
                return _AverageScore;
            }
            set
            {
                OnAverageScoreChanging(value);
                ReportPropertyChanging("AverageScore");
                _AverageScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageScore");
                OnAverageScoreChanged();
            }
        }
        private global::System.Double _AverageScore;
        partial void OnAverageScoreChanging(global::System.Double value);
        partial void OnAverageScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "SpecialityEnrollStatisticUniversityEnrollStatistic", "UniversityEnrollStatistic")]
        public UniversityAcceptanceStatistic UniversityEnrollStatistic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityAcceptanceStatistic>("GloriousFuture.SpecialityEnrollStatisticUniversityEnrollStatistic", "UniversityEnrollStatistic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityAcceptanceStatistic>("GloriousFuture.SpecialityEnrollStatisticUniversityEnrollStatistic", "UniversityEnrollStatistic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UniversityAcceptanceStatistic> UniversityEnrollStatisticReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityAcceptanceStatistic>("GloriousFuture.SpecialityEnrollStatisticUniversityEnrollStatistic", "UniversityEnrollStatistic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UniversityAcceptanceStatistic>("GloriousFuture.SpecialityEnrollStatisticUniversityEnrollStatistic", "UniversityEnrollStatistic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "SpecialityAcceptanceStatisticSpeciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.SpecialityAcceptanceStatisticSpeciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.SpecialityAcceptanceStatisticSpeciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("GloriousFuture.SpecialityAcceptanceStatisticSpeciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("GloriousFuture.SpecialityAcceptanceStatisticSpeciality", "Speciality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="University")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class University : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new University object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="universityType">Initial value of the UniversityType property.</param>
        /// <param name="kind">Initial value of the Kind property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="isEducationDepartment">Initial value of the IsEducationDepartment property.</param>
        /// <param name="is985">Initial value of the Is985 property.</param>
        /// <param name="is211">Initial value of the Is211 property.</param>
        /// <param name="zone">Initial value of the Zone property.</param>
        public static University CreateUniversity(global::System.Guid id, global::System.String name, global::System.String universityType, global::System.String kind, global::System.String address, global::System.Boolean isEducationDepartment, global::System.Boolean is985, global::System.Boolean is211, Zone zone)
        {
            University university = new University();
            university.Id = id;
            university.Name = name;
            university.UniversityType = universityType;
            university.Kind = kind;
            university.Address = address;
            university.IsEducationDepartment = isEducationDepartment;
            university.Is985 = is985;
            university.Is211 = is211;
            university.Zone = StructuralObject.VerifyComplexObjectIsNotNull(zone, "Zone");
            return university;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityType
        {
            get
            {
                return _UniversityType;
            }
            set
            {
                OnUniversityTypeChanging(value);
                ReportPropertyChanging("UniversityType");
                _UniversityType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityType");
                OnUniversityTypeChanged();
            }
        }
        private global::System.String _UniversityType;
        partial void OnUniversityTypeChanging(global::System.String value);
        partial void OnUniversityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.String _Kind;
        partial void OnKindChanging(global::System.String value);
        partial void OnKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefIntroduction
        {
            get
            {
                return _BriefIntroduction;
            }
            set
            {
                OnBriefIntroductionChanging(value);
                ReportPropertyChanging("BriefIntroduction");
                _BriefIntroduction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefIntroduction");
                OnBriefIntroductionChanged();
            }
        }
        private global::System.String _BriefIntroduction;
        partial void OnBriefIntroductionChanging(global::System.String value);
        partial void OnBriefIntroductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEducationDepartment
        {
            get
            {
                return _IsEducationDepartment;
            }
            set
            {
                OnIsEducationDepartmentChanging(value);
                ReportPropertyChanging("IsEducationDepartment");
                _IsEducationDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEducationDepartment");
                OnIsEducationDepartmentChanged();
            }
        }
        private global::System.Boolean _IsEducationDepartment;
        partial void OnIsEducationDepartmentChanging(global::System.Boolean value);
        partial void OnIsEducationDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is985
        {
            get
            {
                return _Is985;
            }
            set
            {
                OnIs985Changing(value);
                ReportPropertyChanging("Is985");
                _Is985 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is985");
                OnIs985Changed();
            }
        }
        private global::System.Boolean _Is985;
        partial void OnIs985Changing(global::System.Boolean value);
        partial void OnIs985Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is211
        {
            get
            {
                return _Is211;
            }
            set
            {
                OnIs211Changing(value);
                ReportPropertyChanging("Is211");
                _Is211 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is211");
                OnIs211Changed();
            }
        }
        private global::System.Boolean _Is211;
        partial void OnIs211Changing(global::System.Boolean value);
        partial void OnIs211Changed();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Zone Zone
        {
            get
            {
                _Zone = GetValidValue(_Zone, "Zone", false, _ZoneInitialized);
                _ZoneInitialized = true;
                return _Zone;
            }
            set
            {
                OnZoneChanging(value);
                ReportPropertyChanging("Zone");
                _Zone = SetValidValue(_Zone, value, "Zone");
                _ZoneInitialized = true;
                ReportPropertyChanged("Zone");
                OnZoneChanged();
            }
        }
        private Zone _Zone;
        private bool _ZoneInitialized;
        partial void OnZoneChanging(Zone value);
        partial void OnZoneChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="UniversityAcceptanceStatistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UniversityAcceptanceStatistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UniversityAcceptanceStatistic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="highestScore">Initial value of the HighestScore property.</param>
        /// <param name="lowestScore">Initial value of the LowestScore property.</param>
        /// <param name="averageScore">Initial value of the AverageScore property.</param>
        /// <param name="batch">Initial value of the Batch property.</param>
        /// <param name="exceedScore">Initial value of the ExceedScore property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        public static UniversityAcceptanceStatistic CreateUniversityAcceptanceStatistic(global::System.Guid id, global::System.DateTime year, global::System.Double highestScore, global::System.Double lowestScore, global::System.Double averageScore, global::System.String batch, global::System.Double exceedScore, global::System.Guid universityId)
        {
            UniversityAcceptanceStatistic universityAcceptanceStatistic = new UniversityAcceptanceStatistic();
            universityAcceptanceStatistic.Id = id;
            universityAcceptanceStatistic.Year = year;
            universityAcceptanceStatistic.HighestScore = highestScore;
            universityAcceptanceStatistic.LowestScore = lowestScore;
            universityAcceptanceStatistic.AverageScore = averageScore;
            universityAcceptanceStatistic.Batch = batch;
            universityAcceptanceStatistic.ExceedScore = exceedScore;
            universityAcceptanceStatistic.UniversityId = universityId;
            return universityAcceptanceStatistic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.DateTime _Year;
        partial void OnYearChanging(global::System.DateTime value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HighestScore
        {
            get
            {
                return _HighestScore;
            }
            set
            {
                OnHighestScoreChanging(value);
                ReportPropertyChanging("HighestScore");
                _HighestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestScore");
                OnHighestScoreChanged();
            }
        }
        private global::System.Double _HighestScore;
        partial void OnHighestScoreChanging(global::System.Double value);
        partial void OnHighestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LowestScore
        {
            get
            {
                return _LowestScore;
            }
            set
            {
                OnLowestScoreChanging(value);
                ReportPropertyChanging("LowestScore");
                _LowestScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestScore");
                OnLowestScoreChanged();
            }
        }
        private global::System.Double _LowestScore;
        partial void OnLowestScoreChanging(global::System.Double value);
        partial void OnLowestScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AverageScore
        {
            get
            {
                return _AverageScore;
            }
            set
            {
                OnAverageScoreChanging(value);
                ReportPropertyChanging("AverageScore");
                _AverageScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageScore");
                OnAverageScoreChanged();
            }
        }
        private global::System.Double _AverageScore;
        partial void OnAverageScoreChanging(global::System.Double value);
        partial void OnAverageScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Batch
        {
            get
            {
                return _Batch;
            }
            set
            {
                OnBatchChanging(value);
                ReportPropertyChanging("Batch");
                _Batch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Batch");
                OnBatchChanged();
            }
        }
        private global::System.String _Batch;
        partial void OnBatchChanging(global::System.String value);
        partial void OnBatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExceedScore
        {
            get
            {
                return _ExceedScore;
            }
            set
            {
                OnExceedScoreChanging(value);
                ReportPropertyChanging("ExceedScore");
                _ExceedScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExceedScore");
                OnExceedScoreChanged();
            }
        }
        private global::System.Double _ExceedScore;
        partial void OnExceedScoreChanging(global::System.Double value);
        partial void OnExceedScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.Guid _UniversityId;
        partial void OnUniversityIdChanging(global::System.Guid value);
        partial void OnUniversityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "UniversityEnrollStatisticUniversity", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.UniversityEnrollStatisticUniversity", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.UniversityEnrollStatisticUniversity", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("GloriousFuture.UniversityEnrollStatisticUniversity", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("GloriousFuture.UniversityEnrollStatisticUniversity", "University", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GloriousFuture", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="coins">Initial value of the Coins property.</param>
        /// <param name="zone">Initial value of the Zone property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String userName, global::System.String password, global::System.String email, global::System.Int32 coins, Zone zone)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Password = password;
            user.Email = email;
            user.Coins = coins;
            user.Zone = StructuralObject.VerifyComplexObjectIsNotNull(zone, "Zone");
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QQ
        {
            get
            {
                return _QQ;
            }
            set
            {
                OnQQChanging(value);
                ReportPropertyChanging("QQ");
                _QQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QQ");
                OnQQChanged();
            }
        }
        private global::System.String _QQ;
        partial void OnQQChanging(global::System.String value);
        partial void OnQQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Coins
        {
            get
            {
                return _Coins;
            }
            set
            {
                OnCoinsChanging(value);
                ReportPropertyChanging("Coins");
                _Coins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coins");
                OnCoinsChanged();
            }
        }
        private global::System.Int32 _Coins;
        partial void OnCoinsChanging(global::System.Int32 value);
        partial void OnCoinsChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Zone Zone
        {
            get
            {
                _Zone = GetValidValue(_Zone, "Zone", false, _ZoneInitialized);
                _ZoneInitialized = true;
                return _Zone;
            }
            set
            {
                OnZoneChanging(value);
                ReportPropertyChanging("Zone");
                _Zone = SetValidValue(_Zone, value, "Zone");
                _ZoneInitialized = true;
                ReportPropertyChanged("Zone");
                OnZoneChanged();
            }
        }
        private Zone _Zone;
        private bool _ZoneInitialized;
        partial void OnZoneChanging(Zone value);
        partial void OnZoneChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GloriousFuture", "FK_AchievementUser", "Achievement")]
        public Achievement Achievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("GloriousFuture.FK_AchievementUser", "Achievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("GloriousFuture.FK_AchievementUser", "Achievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Achievement> AchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Achievement>("GloriousFuture.FK_AchievementUser", "Achievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Achievement>("GloriousFuture.FK_AchievementUser", "Achievement", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GloriousFuture", Name="Zone")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Zone : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        public static Zone CreateZone(global::System.String city, global::System.String province)
        {
            Zone zone = new Zone();
            zone.City = city;
            zone.Province = province;
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();

        #endregion

    }

    #endregion

    
}
